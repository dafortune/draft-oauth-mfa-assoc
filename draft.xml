<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 SYSTEM 'bibxml/reference.RFC.2119.xml'>      
<!ENTITY rfc4287 SYSTEM 'bibxml/reference.RFC.4287.xml'>      
<!ENTITY xmlns SYSTEM 'bibxml/reference.W3C.REC-xml-names-19990114.xml'>      
<!ENTITY rdfsg SYSTEM 'bibxml/reference.W3C.WD-rdf-syntax-grammar-20031010.xml'>      
]>
<rfc docName="draft-hanson-oauth-mfa-latest">
  <front>
    <title>OAuth 2.0 Multi-Factor Authenticator Binding</title>
    <author initials="J." surname="Hanson" fullname="Jared Hanson">
      <organization>Auth0 Inc.</organization>
      <address>       
        <email>jaredhanson@gmail.com</email> 
        <uri>http://www.jaredhanson.net/</uri>       
      </address>
    </author>
    <date/>
    <abstract>
      <t>This specification defines mechanisms for dynamically binding
        authenticators with authorization servers.  Once bound, an authenticator
        can be used for strong authorization within OAuth 2.0.</t>
    </abstract>
  </front>
  <middle>
    
    <section title="Introduction">
      <t>
        In order for an OAuth 2.0 authorization server to enforce strong
        authorization, it must associate resource owners with one or more
        authenticators capable of responding to a strong authorization
        challenge.  This specification describes how an authenticator can be
        dynamically bound with an authorization server to obtain this
        information.
      </t>
        
      <section title="Notational Conventions">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
          "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
          "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>
      </section>
      
      <section title="Terminology">
        <t>
          This specification also defines the following terms:
          
          <list style="hanging"> 
          <t hangText="MFA Token:"><vspace blankLines="1"/>
            A short-lived token representing an authorization session.</t>
          </list> 
        </t>
      </section>
        
    </section>
    
    <section title="Protocol Endpoints">
      <t>
        The authenticator binding process utilizes two authorization server
        endpoints (HTTP resources):
      </t>
      <t>
        <list style='symbols'>
          <t>
            Associate endpoint - used by the client to obtain parameters needed
            to bind an authenticator to an authorization server.
          </t>
          <t>
            Bind endpoint - used by the client to bind an authenticator to an
            authorization server.
          </t>
        </list>
      </t>
      
      <section title='Associate Endpoint' anchor="associate-endpoint">
        <t>
          The associate endpoint is used by the client to obtain parameters
          needed to bind an authenticator to an authorization server.
        </t>
        
        <section title='Associate Request' anchor="token-req">
          <t>
            The client makes a request to the associate endpoint by sending
            the following parameters with a content type of <spanx style='verb'>application/json</spanx>:
          </t>
          <t>
            <list style='hanging' hangIndent='6'>
              <t hangText='mfa_token'>
                <vspace />
                REQUIRED. The MFA token received from the authorization server.
              </t>
              <t hangText='authenticator_types'>
                <vspace />
                OPTIONAL. Array of authenticator type strings that the client
                supports.  These authenticator types are defined as follows:
                
                <list style="symbols">
                  <t><spanx style="verb">otp</spanx>: A device that generates
                  one-time passwords.</t>
                  
                  <t><spanx style="verb">oob</spanx>: A device that communicates
                  securely with the authorization server over a secondary
                  channel.</t>
                </list>
                
                Authorization servers MAY allow for other values as defined in
                the authenticator type extension process.
              </t>
              <t hangText='oob_channels'>
                <vspace />
                OPTIONAL. Array of out-of-band channel strings that the client
                supports.  These out-of-band channels are defined as follows:
                
                <list style="symbols">
                  <t><spanx style="verb">sms</spanx>: SMS channel to the user at
                  a registered number.</t>
                  
                  <t><spanx style="verb">tel</spanx>: Telephone call to the user
                  at a registered number.</t>
                  
                  <t><spanx style="verb">email</spanx>: E-mail sent to the user
                  at a registered address.</t>
                  
                  <t><spanx style="verb">auth0</spanx>: Push notification to
                  Guardian app on user's mobile device.</t>
                  
                  <t><spanx style="verb">duo</spanx>: Push notification to Duo
                  Mobile app on user's mobile device.</t>
                </list>
                
                Authorization servers MAY allow for other values as defined in
                the out-of-band channel extension process.
              </t>
              <t hangText='client_id'>
                <vspace />
                REQUIRED, if the client is not authenticating with the
                authorization server as described in Section 3.2.1 of <xref target="RFC6749"/>.
              </t>
            </list>
          </t>
          <t>
            If the client was issued client credentials (or assigned other
            authentication requirements), the client MUST authenticate with the
            authorization server as described in Section 3.2.1 of <xref target="RFC6749"/>.
          </t>
          <figure>
            <preamble>
              For example, the client makes the following HTTPS request (line
              breaks are for display purposes only)::
            </preamble>
            <artwork><![CDATA[
POST /associate HTTP/1.1
Host: server.example.com
Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
Content-Type: application/json

{
  "mfa_token": "eyJhbGciOiJ...",
  "authenticator_types": [
    "otp", "oob"
  ]
}
]]></artwork>
          </figure>
          <t>
            The authorization server MUST:
          </t>
          <t>
            <list style='symbols'>
              <t>
                require client authentication for confidential clients or for
                any client that was issued client credentials (or with other
                authentication requirements),
              </t>
              <t>
                authenticate the client if client authentication is included,
              </t>
              <t>
                ensure the MFA token was issued to the authenticated
                confidential client, or if the client is public, ensure the MFA
                token was issued to <spanx style='verb'>client_id</spanx> in the
                request,
              </t>
              <t>
                verify that the MFA token is valid, and
              </t>
              <t>
                ensure that MFA binding is allowed based on the claims in the
                MFA token.
              </t>
            </list>
          </t>
        </section>
        
        <section title='Associate Response' anchor="token-res">
          <t>
            If the associate request is valid and authorized, the authorization
            server selects an authenticator that the client is capable of
            supporting, and responds with an HTTP 200 OK status code and a body
            of type "application/json" with the following content:
          </t>
          <t>
            <list style='hanging' hangIndent='6'>
              <t hangText='bind_code'>
                <vspace />
                REQUIRED.  Bind code generated by the authorization server, used
                to complete binding of the authenticator to the user's account.
                The bind code MUST expire shortly after it is issued to mitigate
                the risk of leaks.  A maximum bind code lifetime of 10 minutes
                is RECOMMENDED.
              </t>
              <t hangText='authenticator_type'>
                <vspace />
                REQUIRED.  Authenticator type to associate with the user's
                account.
              </t>
              <t hangText='barcode_uri'>
                <vspace />
                OPTIONAL. URI to be rendered as a barcode which can be scanned
                by the authenticator to effect provisioning.
              </t>
            </list>
          </t>
          <t>
            The response MAY include additional parameters that are interpreted
            according to an authenticator type definition.
          </t>
        </section>
      </section>
      
      <section title='Bind Endpoint' anchor="bind-endpoint">
        <t>
          The bind endpoint is used by the client to bind an authenticator to a
          user's account on the authorization server.
        </t>
        
        <section title='Bind Request' anchor="bind-req">
          <t>
            The client makes a request to the bind endpoint by sending
            the following parameters with a content type of <spanx style='verb'>application/json</spanx>:
          </t>
          <t>
            <list style='hanging' hangIndent='6'>
              <t hangText='mfa_token'>
                <vspace />
                REQUIRED. The MFA token received from the authorization server.
              </t>
              <t hangText='bind_code'>
                <vspace />
                REQUIRED. The bind token received from the authorization server.
              </t>
              <t hangText='client_id'>
                <vspace />
                REQUIRED, if the client is not authenticating with the
                authorization server as described in Section 3.2.1 of <xref target="RFC6749"/>.
              </t>
            </list>
          </t>
          <t>
            If the client was issued client credentials (or assigned other
            authentication requirements), the client MUST authenticate with the
            authorization server as described in Section 3.2.1 of <xref target="RFC6749"/>.
          </t>
          <figure>
            <preamble>
              For example, the client makes the following HTTPS request (line
              breaks are for display purposes only)::
            </preamble>
            <artwork><![CDATA[
POST /bind HTTP/1.1
Host: server.example.com
Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
Content-Type: application/json

{
  "mfa_token": "eyJhbGciOiJ...",
  "bind_code": "eyJ0eXAiOiJ..."
}
]]></artwork>
          </figure>
          <t>
            The authorization server MUST:
          </t>
          <t>
            <list style='symbols'>
              <t>
                require client authentication for confidential clients or for
                any client that was issued client credentials (or with other
                authentication requirements),
              </t>
              <t>
                authenticate the client if client authentication is included,
              </t>
              <t>
                ensure the MFA token was issued to the authenticated
                confidential client, or if the client is public, ensure the MFA
                token was issued to <spanx style='verb'>client_id</spanx> in the
                request,
              </t>
              <t>
                verify that the MFA token is valid, and
              </t>
              <t>
                ensure that MFA binding is allowed based on the claims in the
                MFA token.
              </t>
            </list>
          </t>
        </section>
        
        <section title='Bind Response' anchor="bind-res">
          
        </section>
      </section>
    </section>
    
  </middle>
  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>
      <?rfc include="reference.RFC.4627"?>
      <?rfc include="reference.RFC.6749"?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-oauth-discovery-05.xml'?>
    </references>
  </back>
</rfc>
